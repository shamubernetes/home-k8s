# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  values:
    controllers:
      ${APP}:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jfroy/stash
              tag: v0.28.1-cudajellyfin.4@sha256:0e4b5eb7971ddadc0e482fd9799a5fd621160359ce67da4bdda990ccc67e06c2
            env:
              HOME: /config
              STASH_BLOBS_PATH: /blobs
              STASH_BLOBS_STORAGE: FILESYSTEM
              STASH_CACHE: /cache
              STASH_CONFIG_FILE: /config/config.yml
              STASH_DATABASE: /config/stash-go.sqlite
              STASH_GENERATED: /generated
              STASH_METADATA: /metadata
              STASH_PLUGINS_PATH: /plugins
              STASH_PORT: &port 80
              STASH_SCRAPERS_PATH: /scrapers
              STASH_EXTERNAL_HOST: "https://stash.${HOME_DOMAIN}"
              TZ: ${TIMEZONE}
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            workingDir: /config
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4000]
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${HOME_DOMAIN}
        hosts:
        - host: "{{ .Release.Name }}.${HOME_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      cache:
        type: emptyDir
      config:
        existingClaim: *app
      data:
        type: persistentVolumeClaim
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        retain: true
        size: 200Gi
        globalMounts:
        - path: /blobs
          subPath: blobs
        - path: /generated
          subPath: generated
        - path: /metadata
          subPath: metadata
      plugins:
        type: persistentVolumeClaim
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        retain: true
        size: 100Mi
      scrapers:
        type: persistentVolumeClaim
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        retain: true
        size: 100Mi
      media:
        type: nfs
        server: "${IPAM_IP_NFS}"
        path: /mnt/user/Media
        globalMounts:
        - path: /media
          readOnly: true
