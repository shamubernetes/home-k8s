# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kometa
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  values:
    controllers:
      kometa:
        type: cronjob
        initContainers:
          copy-config:
            image:
              repository: ghcr.io/shamubernetes/utils
              tag: 1.0.0@sha256:d219b1ce37e8e51b1534eb7b2cc7ff1d4b5b365fb19cd8e91b2f81f9bd6ef19d
            args: ["gitclone", "-r", "shamubernetes/kometa-config", "-p", "/config"]
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          schedule: "0 */1 * * *"
          timeZone: &timezone ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app:
            image:
              repository: kometateam/kometa
              tag: nightly@sha256:c4f3b4130598a79d23fb058bbd49b1730d57f359b342eaa3bef397cb553ee9c4
            command:
            - /bin/sh
            - -c
            args:
            - |
              python3 kometa.py --run --read-only-config --run-libraries "Movies"
            env:
              TZ: *timezone
              KOMETA_CONFIG: /config/config.yaml
            envFrom:
            - secretRef:
                name: kometa-secret
            resources:
              requests:
                cpu: 10m
                memory: 4096M
              limits:
                memory: 8192M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
            lifecycle:
              postStart:
                exec:
                  command: ["/bin/bash", "-c", "mkdir -p /config"]
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      assets:
        existingClaim: plex-posters
        globalMounts:
        - path: /assets
      config-data:
        existingClaim: *app
        globalMounts:
        - path: /config
      logs:
        type: emptyDir
        globalMounts:
        - path: /config/logs
