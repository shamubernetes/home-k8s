# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  - name: volsync
    namespace: volsync-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          hamass:
            image:
              repository: curlimages/curl
              tag: 8.15.0@sha256:4026b29997dc7c823b51c164b71e2b51e0fd95cce4601f78202c513d97da2922
            command:
            - sh
            - -c
            - |
              #!/bin/sh
              set -e
              PLEX_CONFIG="/config/Library/Application Support/Plex Media Server"

              install_or_update() {
                NAME="$1"
                REPO="$2"
                TARGET_DIR="$3"

                echo "--- Checking $NAME ---"

                LATEST_COMMIT=$(curl -s "https://api.github.com/repos/$REPO/commits/master" \
                  | grep '"sha"' | head -n 1 | cut -d '"' -f 4)

                COMMIT_FILE="$TARGET_DIR/.commit"

                if [ ! -f "$COMMIT_FILE" ] || [ "$(cat "$COMMIT_FILE")" != "$LATEST_COMMIT" ]; then
                  echo "Updating $NAME to commit $LATEST_COMMIT ..."
                  rm -rf "$TARGET_DIR" /tmp/tmpdir
                  mkdir -p "$TARGET_DIR" /tmp/tmpdir

                  ZIP_URL="https://github.com/$REPO/archive/refs/heads/master.zip"
                  curl -sL "$ZIP_URL" -o /tmp/plugin.zip

                  unzip -qo /tmp/plugin.zip -d /tmp/tmpdir
                  mv /tmp/tmpdir/*/* "$TARGET_DIR" || mv /tmp/tmpdir/* "$TARGET_DIR"

                  echo "$LATEST_COMMIT" > "$COMMIT_FILE"
                  echo "$NAME updated."
                else
                  echo "$NAME is already up-to-date (commit $LATEST_COMMIT)."
                fi
              }

              install_or_update "HAMA" "ZeroQI/Hama.bundle" \
                "$PLEX_CONFIG/Plug-ins/Hama.bundle"

              install_or_update "Absolute Series Scanner" "ZeroQI/Absolute-Series-Scanner" \
                "$PLEX_CONFIG/Scanners/Series/Absolute Series Scanner"

              echo "--- All plugins processed ---"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.1.10060@sha256:04563be281364ba2462285aacb2ca13d7ef7e1d0b19e1203f4c19b4a56840c5c
            env:
              TZ: America/New_York
              PLEX_ADVERTISE_URL: https://plex.${HOME_DOMAIN}:443,http://${IPAM_IP_PLEX}:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/8
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &plexPort 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${IPAM_IP_PLEX}"
        ports:
          http:
            port: *plexPort
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${HOME_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        className: external
        hosts:
        - host: "{{ .Release.Name }}.${HOME_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: plex
        # TODO: If setting up Plex for the first time, you'll want to add the globalMounts section
        globalMounts:
        - path: /config/Library/Application Support/Plex Media Server
      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
        - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
        - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: "${IPAM_IP_NFS}"
        path: /mnt/user/Media
        globalMounts:
        - path: /media
          readOnly: true
