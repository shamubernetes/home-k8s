# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16@sha256:217c47c886965474f5c234b5a35ed008f53b39ea90a3088b31c0da98e1f9284d
            envFrom: &envFrom
            - secretRef:
                name: whisparr-secret
        containers:
          app:
            image:
              repository: ghcr.io/shamubernetes/whisparr-eros
              tag: 3.0.0.1038@sha256:c56f2c1949f728582796d2bd7a72f97d70be3aa7a8943c8cf691a2007b40cac9
            env:
              WHISPARR__ANALYTICS_ENABLED: "False"
              WHISPARR__AUTHENTICATION_METHOD: External
              WHISPARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              WHISPARR__BRANCH: develop
              WHISPARR__INSTANCE_NAME: Whisparr
              WHISPARR__LOG_LEVEL: info
              WHISPARR__PORT: &port 80
              TZ: ${TIMEZONE}
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${HOME_DOMAIN}
        className: internal
        hosts:
        - host: "{{ .Release.Name }}.${HOME_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: *app
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: "${IPAM_IP_NFS}"
        path: /mnt/user/Media
        globalMounts:
        - path: /media
